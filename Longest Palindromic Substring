/* Given a string s, return the longest palindromic substring in s.

 

Example 1:

Input: s = "babad"
Output: "bab"
Note: "aba" is also a valid answer.
Example 2:

Input: s = "cbbd"
Output: "bb"
Example 3:

Input: s = "a"
Output: "a"
Example 4:

Input: s = "ac"
Output: "a". */


class Solution {
    public String longestPalindrome(String s) {
        int start=0; int end =0;
        
        for(int i=0;i<s.length();i++){
            int  len1 = expandFromCenter(s,i, i);
            int len2 = expandFromCenter(s, i , i+1);
            
            int len = Math.max(len1, len2);
            
            if(len > end - start){
            start = i - ((len -1)/2); //from center to move the point to beginning of substring
            end = i+ (len/2) ; //from center to move the pointer th end of the substring 
            }
        }
        return s.substring(start,end+1);
    }
    
    
    public int expandFromCenter(String s, int left, int right){
        
        if(s == null || left > right) return 0;
        while(left >= 0 && right < s.length() && s.charAt(left) == s.charAt(right) ){
            left --;
            right ++;
        
        }
        
        return right - left - 1; //to pass the right index
    }
}
