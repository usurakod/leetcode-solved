/* Given an input string s, reverse the order of the words.

A word is defined as a sequence of non-space characters. The words in s will be separated by at least one space.

Return a string of the words in reverse order concatenated by a single space.

Note that s may contain leading or trailing spaces or multiple spaces between two words. The returned string should only have a single space separating the words. Do not include any extra spaces.

 

Example 1:

Input: s = "the sky is blue"
Output: "blue is sky the"
Example 2:

Input: s = "  hello world  "
Output: "world hello"
Explanation: Your reversed string should not contain leading or trailing spaces.
Example 3:

Input: s = "a good   example"
Output: "example good a"
Explanation: You need to reduce multiple spaces between two words to a single space in the reversed string.
Example 4:

Input: s = "  Bob    Loves  Alice   "
Output: "Alice Loves Bob"
Example 5:

Input: s = "Alice does not even like bob"
Output: "bob like even not does Alice" */

class Solution {
    public String reverseWords(String s) {
       
        String input = s.trim();
        
        Deque<String> d = new ArrayDeque();
        List<String> list = new ArrayList<>();
        StringBuilder sb = new StringBuilder();
        for(int i=0;i<input.length();i++){
            
            if(input.charAt(i) == ' ' && sb.length() != 0){
                //d.addFirst(sb.toString());
                list.add(sb.toString());
                sb = new StringBuilder();
            }
            else if(input.charAt(i) != ' '){
                sb.append(input.charAt(i));
            }
        }
        //d.addFirst(sb.toString());
        list.add(sb.toString());
        Collections.reverse(list);
        return String.join(" ", list);
    }
}
