/* 572. Subtree of Another Tree
Easy

3168

158

Add to List

Share
Given two non-empty binary trees s and t, check whether tree t has exactly the same structure and node values with a subtree of s. A subtree of s is a tree consists of a node in s and all of this node's descendants. The tree s could also be considered as a subtree of itself.

Example 1:
Given tree s:

     3
    / \
   4   5
  / \
 1   2
Given tree t:
   4 
  / \
 1   2
Return true, because t has the same structure and node values with a subtree of s.
 

Example 2:
Given tree s:

     3
    / \
   4   5
  / \
 1   2
    /
   0
Given tree t:
   4
  / \
 1   2
Return false. */

class Solution {
    public boolean isSubtree(TreeNode s, TreeNode t) {
        
        return traverse(s, t);
        
    }
    
    public boolean traverse(TreeNode s, TreeNode t){
        
        return (s!= null &&(equals(s,t) || traverse(s.left, t) || traverse(s.right, t)));
    }
    
    public boolean equals(TreeNode x, TreeNode y){
        if(x == null && y==null){
            return true;
        }
        if(x == null || y == null){
            return false;
        }
        return x.val == y.val && equals(x.left, y.left) && equals(x.right, y.right);
    }
}
